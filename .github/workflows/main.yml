# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish Java Package with Maven to GitHub Registry

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: [ main ]
  pull_request:
   branches: [ main ]
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # ################################################################################
      # https://github.community/t/repository-name-in-environment-variable/16856/9
      - name: Dump GitHub context/job/steps/runner/strategy/matrix
        run: |
          echo repository       === `${{ github.repository }}`
          echo repository.repo  === `${{ github.repository }} | awk -F '/' '{print $2}'`
          echo context.event    === `${{ toJSON(github.event) }}`
          echo repository       === `${{ github.event.repository.name }}`
          echo ===============================================================
          #echo context          === `${{ toJSON(github) }}`
          echo job context      === `${{ toJSON(job) }}`
          echo steps context    === `${{ toJSON(steps) }}`
          echo runner context   === `${{ toJSON(runner) }}`
          echo strategy context === `${{ toJSON(strategy) }}`
          echo matrix context   === `${{ toJSON(matrix) }}`

      # ################################################################################
      - name: Confirm middleware's versions
        run: |
          echo PATH           === $PATH
          echo node           === `node -v`
          echo npm            === `npm -v`
          echo python         === `python --version`
          echo java           === `java -version`
          echo mvn            === `mvn -version`
          echo docker         === `docker version`
          echo docker-compose === `docker-compose -v`
          echo git            === `git version`
          echo go             === `go version`
