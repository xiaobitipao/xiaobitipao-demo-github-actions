# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish Java Package with Maven to GitHub Registry

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: [ main ]
  pull_request:
   branches: [ main ]
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Reference: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-Apache-Maven
      - name: Set up JDK 17 and Set Maven settings.xml
        uses: actions/setup-java@v2
        with:
          java-version: '17'                        # The Java version to set up. Takes a whole or semver Java version. See examples of upported syntax in README file
          distribution: 'temurin'
          settings-path: ${{ github.workspace }}    # location for the settings.xml file(default $HOME)
          server-id: github-public                  # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_ACTOR             # env variable for username in deploy
          server-password: GITHUB_TOKEN             # env variable for token in deploy

      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      # ################################################################################
      - name: Dump GitHub context/job/steps/runner/strategy/matrix
        run: |
          echo context          ===: `${{ toJSON(github) }}`
          echo job context      ===: `${{ toJSON(job) }}`
          echo steps context    ===: `${{ toJSON(steps) }}`
          echo runner context   ===: `${{ toJSON(runner) }}`
          echo strategy context ===: `${{ toJSON(strategy) }}`
          echo matrix context   ===: `${{ toJSON(matrix) }}`

      # ################################################################################
      - name: Confirm middleware's versions
        run: |
          echo $PATH
          echo node: `node -v`
          echo npm: `npm -v`
          echo python: `python --version`
          echo java: `java -version`
          echo mvn: `mvn -version`
          echo docker: `docker version`
          echo docker-compose: `docker-compose -v`
          echo git: `git version`
          echo go: `go version`
